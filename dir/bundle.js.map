{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://3-nd-course-hw/./components/renderFinalGame.ts","webpack://3-nd-course-hw/./components/userProfileGame.ts","webpack://3-nd-course-hw/./components/mechanismGame.ts","webpack://3-nd-course-hw/./components/generateGameCards.ts","webpack://3-nd-course-hw/./components/renderDifficultyLevel.ts","webpack://3-nd-course-hw/./components/selectDifficultyGame.ts","webpack://3-nd-course-hw/./script.ts"],"sourcesContent":["import { renderDifficultyLevel } from './renderDifficultyLevel'\n\nconst finalGame = ({ userInfoGame }) => {\n    const gameField = document.querySelector('.field')\n    const gameFieldHtml = gameField!.innerHTML\n    if (userInfoGame.winLastGame === false) {\n        gameField!.innerHTML =\n            gameFieldHtml +\n            `<section class=\"final-game\">\n        <div class=\"content content__final\">\n            <div class=\"content__final-image\">\n                <img src=\"./img/final-loss.png\" />\n            </div>\n            <h1 class=\"content__title content__final-title\">\n                Вы проиграли!\n            </h1>\n            <div class=\"content__final-time\">\n                <p class=\"content__final-time-text\">Затраченное время:</p>\n                <p class=\"content__final-time-numbers\">${userInfoGame.timeLastGame}</p>\n            </div>\n            <div class=\"content__button content__final-button\">\n                <button id=\"newGames\" class=\"button-start\">Играть снова</button>\n            </div>\n        </div>\n    </section>`\n    } else if (userInfoGame.winLastGame === true) {\n        gameField!.innerHTML =\n            gameFieldHtml +\n            `<section class=\"final-game\">\n    <div class=\"content content__final\">\n        <div class=\"content__final-image\">\n            <img src=\"./img/final-win.png\" />\n        </div>\n        <h1 class=\"content__title content__final-title\">\n            Вы выиграли!\n        </h1>\n        <div class=\"content__final-time\">\n            <p class=\"content__final-time-text\">Затраченное время:</p>\n            <p class=\"content__final-time-numbers\">${userInfoGame.timeLastGame}</p>\n        </div>\n        <div class=\"content__button content__final-button\">\n            <button id=\"newGames\" class=\"button-start\">Играть снова</button>\n        </div>\n    </div>\n</section>`\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const newGames: HTMLElement | void = document\n        .getElementById('newGames')!\n        .addEventListener('click', () => {\n            userInfoGame.difficultyLevel = false\n            renderDifficultyLevel()\n        })\n}\nexport { finalGame }\n","type userInfo = {\n    difficultyLevel: boolean | string\n    quantityOfCards: number\n    oneOpenCard?: {\n        value?: string\n    }\n    twoOpenCard?: {\n        value?: string\n    }\n    winLastGame: boolean\n    timeLastGame: string\n}\n\nconst userInfoGame: userInfo = {\n    difficultyLevel: false,\n    quantityOfCards: 0,\n    oneOpenCard: {\n        value: '',\n    },\n    twoOpenCard: {\n        value: '',\n    },\n    winLastGame: false,\n    timeLastGame: '00.00',\n}\n\nexport { userInfoGame }\n","import { finalGame } from './renderFinalGame'\nimport { userInfoGame } from './userProfileGame'\n\n// let oneOpenCard = {\n//     value: '',\n// }\n// let twoOpenCard = {\n//     value: '',\n// }\n\nconst mechanicsGame = ({ minute, second }) => {\n    const cards = document.querySelectorAll('.item__image')\n    cards.forEach((card) => {\n        card.addEventListener('click', () => {\n            const htmlCard = card as HTMLElement\n            htmlCard.setAttribute('src', `./img/${htmlCard.dataset.value}.jpg`)\n            htmlCard.dataset.open = 'open'\n            if (!userInfoGame?.oneOpenCard?.value) {\n                userInfoGame.oneOpenCard!.value = htmlCard.dataset.value\n            } else {\n                userInfoGame.twoOpenCard!.value = htmlCard.dataset.value\n                comparisonCard()\n            }\n        })\n    })\n\n    const comparisonCard = () => {\n        if (\n            userInfoGame.oneOpenCard?.value === userInfoGame.twoOpenCard?.value\n        ) {\n            userInfoGame.oneOpenCard!.value = ''\n            checkWin()\n        } else {\n            userInfoGame.winLastGame = false\n            userInfoGame.timeLastGame = minute.innerHTML + second.innerHTML\n            finalGame({ userInfoGame })\n        }\n    }\n\n    const checkWin = () => {\n        const cards: HTMLElement[] = Array.from(\n            document.querySelectorAll('.item__image')\n        )\n        for (let card of cards) {\n            if (card.dataset.open !== 'open') {\n                return false\n            }\n        }\n        userInfoGame.winLastGame = true\n        userInfoGame.timeLastGame = minute.innerHTML + second.innerHTML\n        finalGame({ userInfoGame })\n    }\n}\n\nexport { mechanicsGame }\n","import { mechanicsGame } from './mechanismGame'\nimport { renderDifficultyLevel } from './renderDifficultyLevel'\n\nexport const getRank = (number: Number) => {\n    switch (number) {\n        case 6:\n            return '6'\n        case 7:\n            return '7'\n        case 8:\n            return '8'\n        case 9:\n            return '9'\n        case 10:\n            return '10'\n        case 11:\n            return 'jack'\n        case 12:\n            return 'queen'\n        case 13:\n            return 'king'\n        case 14:\n            return 'ace'\n        default:\n            break\n    }\n}\n\nexport const getSuit = (number: Number) => {\n    switch (number) {\n        case 1:\n            return 'clubs'\n        case 2:\n            return 'diamonds'\n        case 3:\n            return 'hearts'\n        case 4:\n            return 'spades'\n        default:\n            break\n    }\n}\n\nconst generateCards = ({ userInfoGame, selectDifficulty }) => {\n    let arrCards: String[] = []\n    let rank: number | string | undefined = 0\n    let suit: number | string | undefined = ''\n    for (let i = 0; i < userInfoGame.quantityOfCards / 2; i++) {\n        do {\n            rank = getRank(Math.floor(Math.random() * 9) + 6)\n            suit = getSuit(Math.floor(Math.random() * 4) + 1)\n        } while (\n            arrCards.includes(\n                `<div class=\"field__item\"><img data-value=\"${rank}-${suit}\" data-value=\"\" src=\"./img/${rank}-${suit}.jpg\" /></div>`\n            )\n        )\n        let card = `<div class=\"field__item\"><img data-value=\"${rank}-${suit}\" data-value=\"\" class=\"item__image\" src=\"./img/${rank}-${suit}.jpg\" /></div>`\n        arrCards.push(card)\n\n        let index = Math.floor(Math.random() * userInfoGame.quantityOfCards) + 1\n\n        let isFindSlot = false\n        while (!isFindSlot) {\n            if (!arrCards[index]) {\n                arrCards[index] = card\n                isFindSlot = true\n            } else if (index === userInfoGame.quantityOfCards) {\n                index = 1\n            } else {\n                index++\n            }\n        }\n    }\n\n    selectDifficulty.innerHTML = `\n        <div class=\"field\">\n        <div class=\"field__header\">\n            <div class=\"field__time\">\n                <p class=\"field__time-min\">00.</p>\n                <p class=\"field__time-sec\">00</p>\n            </div>\n            <button id=\"newGame\" class=\"button-start\">Начать заново</button>\n        </div>\n       ${arrCards.map((card) => card).join('')}\n    </div>`\n\n    setTimeout(() => {\n        const cards: HTMLElement[] = Array.from(\n            document.querySelectorAll('.item__image')\n        )\n        for (let card of cards) {\n            card.setAttribute('src', './img/card-shirt.jpg')\n        }\n\n        const second: HTMLElement = document.querySelector('.field__time-sec')!\n        const minute: HTMLElement = document.querySelector('.field__time-min')!\n        let sec\n        let min\n\n        setInterval(() => {\n            sec = (Number(second.innerHTML) + 1).toString()\n            if (sec < 60) {\n                second.innerHTML = Number(sec) < 10 ? '0' + sec : sec\n            } else {\n                min = (Number(minute.innerHTML) + 1 + '.').toString()\n                minute.innerHTML = Number(min) < 10 ? '0' + min : min\n                second.innerHTML = '00'\n            }\n        }, 1000)\n        mechanicsGame({ minute, second })\n    }, 5000)\n\n    // eslint-disable-next-line no-unused-vars\n    const newGame: void = document\n        .getElementById('newGame')!\n        .addEventListener('click', () => {\n            userInfoGame.difficultyLevel = false\n            renderDifficultyLevel()\n        })\n\n    console.log(newGame)\n}\n\nexport { generateCards }\n","import { generateCards } from './generateGameCards'\nimport { functionSelectDifficulty } from './selectDifficultyGame'\nimport { userInfoGame } from './userProfileGame'\n\nconst renderDifficultyLevel = () => {\n    userInfoGame.oneOpenCard!.value = ''\n    userInfoGame.twoOpenCard!.value = ''\n    const selectDifficulty = document.getElementById('diff')\n\n    if (!userInfoGame.difficultyLevel) {\n        selectDifficulty!.innerHTML = `\n    <div class=\"content\">\n     <h1 class=\"content__title\">Выбери<br>сложность</h1>\n        <form action=\"#\">\n          <div class=\"content__diff-lvl\">\n            <div class=\"diff-lvl__button\">\n                <input type=\"radio\" name=\"difficulty\" id=\"diff-easy\" value=\"1\">\n                <label for=\"diff-easy\">1</label>\n            </div>\n            <div class=\"diff-lvl__button\">\n                <input type=\"radio\" name=\"difficulty\" id=\"diff-middle\" value=\"2\">\n                <label for=\"diff-middle\">2</label>\n            </div>\n            <div class=\"diff-lvl__button\">\n                <input type=\"radio\" name=\"difficulty\" id=\"diff-hard\" value=\"3\">\n                <label for=\"diff-hard\">3</label>\n            </div>\n         </div>\n         <div class=\"content__button\">\n            <button class=\"button-start\">Старт</button>\n         </div>\n        </form>\n    </div>`\n\n        functionSelectDifficulty({ userInfoGame })\n        // eslint-disable-next-line no-unused-vars\n        const startGameButton: void = document\n            .querySelector('.button-start')!\n            .addEventListener('click', () => {\n                if (!userInfoGame.difficultyLevel) {\n                    alert('Пожалуйста, выберите сложность')\n                } else {\n                    renderDifficultyLevel()\n                }\n            })\n    } else if (userInfoGame.difficultyLevel === '1') {\n        generateCards({ userInfoGame, selectDifficulty })\n    } else if (userInfoGame.difficultyLevel === '2') {\n        generateCards({ userInfoGame, selectDifficulty })\n    } else if (userInfoGame.difficultyLevel === '3') {\n        generateCards({ userInfoGame, selectDifficulty })\n    }\n}\n\nexport { renderDifficultyLevel }\n","const functionSelectDifficulty = ({ userInfoGame }) => {\n    const difficultyEasy = document.getElementById(\n        'diff-easy'\n    ) as HTMLInputElement\n    const difficultyMiddle = document.getElementById(\n        'diff-middle'\n    ) as HTMLInputElement\n    const difficultyHard = document.getElementById(\n        'diff-hard'\n    ) as HTMLInputElement\n\n    difficultyEasy.addEventListener('click', () => {\n        userInfoGame.difficultyLevel = difficultyEasy.value\n        userInfoGame.quantityOfCards = 6\n    })\n\n    difficultyMiddle.addEventListener('click', () => {\n        userInfoGame.difficultyLevel = difficultyMiddle.value\n        userInfoGame.quantityOfCards = 12\n    })\n\n    difficultyHard.addEventListener('click', () => {\n        userInfoGame.difficultyLevel = difficultyHard.value\n        userInfoGame.quantityOfCards = 18\n    })\n}\n\nexport { functionSelectDifficulty }\n","import './style/style.css'\nimport { renderDifficultyLevel } from './components/renderDifficultyLevel'\n\nrenderDifficultyLevel()\n"],"names":["finalGame","userInfoGame","gameField","document","querySelector","gameFieldHtml","innerHTML","winLastGame","timeLastGame","getElementById","addEventListener","difficultyLevel","renderDifficultyLevel","quantityOfCards","oneOpenCard","value","twoOpenCard","mechanicsGame","minute","second","querySelectorAll","forEach","card","htmlCard","setAttribute","dataset","open","comparisonCard","checkWin","Array","from","getRank","number","getSuit","selectDifficulty","arrCards","rank","suit","i","Math","floor","random","includes","push","index","isFindSlot","map","join","setTimeout","sec","min","setInterval","Number","toString","newGame","console","log","generateCards","difficultyEasy","difficultyMiddle","difficultyHard","functionSelectDifficulty","alert"],"sourceRoot":""}